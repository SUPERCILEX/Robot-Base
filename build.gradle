buildscript {
    ext.kotlin_version = "1.1.3"

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.jaci.openrio.gradle:GradleRIO:2017.2.3"
        classpath "net.saliman:gradle-cobertura-plugin:2.4.0"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1"
    }
}

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "jaci.openrio.gradle.GradleRIO"
apply plugin: "net.saliman.cobertura"
apply plugin: "com.github.kt3k.coveralls"
deploy.dependsOn "build"
check.dependsOn "ktlint"

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

configurations {
    ktlint
}

wpi {
    wpilibVersion = "+"
    ntcoreVersion = "+"
    opencvVersion = "+"
    cscoreVersion = "+"
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    compile 'com.github.strongback:strongback-java:v2017.2.0'
    compile wpilib()
    compile talonSrx()

    ktlint 'com.github.shyiko:ktlint:0.9.0'

    testCompile "org.easytesting:fest-assert:1.4"
    testCompile "junit:junit:4.12"
    testRuntime "org.slf4j:slf4j-api:1.7.10"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

frc {
    team = "2521"
    robotClass = "org.sert2521.gamename.Robot"
    rioIP = "10.25.21.89"
}

def robotManifest = {
    attributes "Main-Class": "edu.wpi.first.wpilibj.RobotBase"
    attributes "Robot-Class": frc.robotClass
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest robotManifest
}

test {
    testLogging {
        showStandardStreams = true
    }
}

cobertura {
    coverageFormats = ["html", "xml"]
    coverageExcludes = [".*org.sert2521.gamename.Robot", ".*org.sert2521.gamename.OI"]
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}
